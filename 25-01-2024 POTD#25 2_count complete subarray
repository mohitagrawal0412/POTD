class Solution {
public:
    int countCompleteSubarrays(vector<int>& nums) {
       unordered_set<int> st;
       for(int i=0;i<nums.size();i++)
       st.insert(nums[i]);
       int c=0;
       int size=st.size();
       
         for(int i=0;i<nums.size();i++)
        {
            unordered_set<int> check;
            for(int j=i;j<nums.size();j++)
            {
              check.insert(nums[j]);
                if(check.size()==size)
                c++;
            }
        }
        return c;
        
    }
};
// map<int,int> mp;
//         for(int i=0;i<nums.size();i++)
//         {
//             mp[nums[i]]++;
//         }
//         int size=mp.size();
//         int start=0,end=0;
//         map<int,int> mp1;
//         int c=0;
//         for(int i=0;i<nums.size();i++)
//         {
//             mp1.clear();
//             for(int j=i;j<nums.size();j++)
//             {
//                 mp1[nums[j]]++;
//                 if(mp1.size()==size)
//                 c++;
//             }
//         }
//         return c;
        
